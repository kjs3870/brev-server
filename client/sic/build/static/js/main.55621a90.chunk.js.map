{"version":3,"sources":["components/Intro.js","components/Loader.js","routes/Home.js","components/FuncContent.js","routes/Detail.js","components/Navigation.js","routes/Write.js","routes/Update.js","routes/Search.js","App.js","serviceWorker.js","index.js"],"names":["Intro","id","title","company","content","updatedAt","createdAt","undefined","Card","Header","href","to","pathname","state","Body","Title","Loader","className","Spinner","animation","role","Home","isLoading","intros","getIntros","a","axios","get","data","setState","isAuth","this","alert","window","location","Container","Row","xs","md","map","intro","Col","key","React","Component","FuncContent","str","byteCnt","strCnt","i","length","escape","charAt","onClick","document","getElementById","select","execCommand","rel","target","Detail","getIntro","props","match","params","Form","Group","as","controlId","Label","Control","type","placeholder","value","readOnly","span","rows","offset","Button","variant","goHome","bind","Navigation","Navbar","bg","Brand","Nav","Link","inline","FormControl","onKeyDown","event","keyCode","preventDefault","click","q","Write","name","onKeyUp","len","innerText","post","then","result","lastInsertId","Update","put","delete","history","back","defaultValue","countTextarea","cancelUpdate","deleteData","updateData","Search","search","decodeURI","split","includes","e","App","path","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.55621a90.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Card} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport \"./Intro.css\"\r\n\r\nfunction Intro({id, title, company, content, updatedAt, createdAt}) {\r\n    if(title===null) title=undefined;\r\n    if(company===null) company=undefined;\r\n    if(content===null) content=undefined;\r\n    \r\n    return(\r\n        <Card id={id}>\r\n            <Card.Header>\r\n                #<a href={`/sic/search?q=${company}`}>{company}</a>\r\n            </Card.Header>\r\n            <Link to={{\r\n                pathname:`/sic/intro/${id}`,\r\n                state: {id, title, company, content, updatedAt, createdAt}\r\n                }}>\r\n                <Card.Body>\r\n                    <Card.Title>{title}</Card.Title>\r\n                </Card.Body>\r\n            </Link>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Intro;","import React from \"react\";\r\nimport {Spinner} from \"react-bootstrap\";\r\nimport \"./Loader.css\";\r\n\r\nfunction Loader() {\r\n    return(\r\n        <div className=\"loader\">\r\n            <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React from \"react\";\r\nimport Intro from \"../components/Intro\";\r\nimport {Container, Row, Col} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nclass Home extends React.Component {\r\n    state = {\r\n        isLoading: true,\r\n        intros: []\r\n    }\r\n\r\n    getIntros = async () => {\r\n        const {data} = await axios.get(\"/api/self-intro/\");\r\n        this.setState({intros: data, isLoading:false});\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { data } = await axios.get(\"/api/auth/isauth\");\r\n        if(data.isAuth) this.getIntros();\r\n        else {\r\n            alert(\"로그인이 필요합니다.\");\r\n            window.location.href=\"/\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {isLoading, intros} =this.state;\r\n        return (\r\n            <Container>\r\n                {isLoading ? (\r\n                    <Loader />\r\n                ) : (\r\n                    <Row xs={1} md={2} className=\"intros\">\r\n                        {intros.map((intro) => {\r\n                            return (\r\n                                <Col key={intro.id}>\r\n                                    <Intro\r\n                                        key = {intro.id}\r\n                                        id = {intro.id}\r\n                                        title = {intro.title}\r\n                                        company = {intro.company}\r\n                                        content = {intro.content}\r\n                                        createdAt = {intro.createdAt}\r\n                                        updatedAt = {intro.updatedAt}\r\n                                    />\r\n                                </Col>\r\n                            );\r\n                        })}\r\n                    </Row>\r\n                )}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport \"./FuncContent.css\";\r\n\r\nfunction FuncContent({str}) {\r\n    function copyContent() {\r\n        document.getElementById(\"content\").select();\r\n        document.execCommand(\"copy\");\r\n    }\r\n\r\n    let byteCnt = 0;\r\n    let strCnt = 0;\r\n\r\n    if(str !== undefined) {\r\n        for(let i=0; i<str.length; i++) {\r\n            if(escape(str.charAt(i)).length === 6) byteCnt++;\r\n            byteCnt++;\r\n        }\r\n        strCnt = str.length;\r\n    }\r\n    \r\n    return (\r\n        <div className=\"func\">\r\n            <ul>\r\n                <li><span id=\"copy\" onClick={copyContent}>Copy</span></li>\r\n                <li><a href=\"https://www.jobkorea.co.kr/service/user/tool/spellcheck\" rel=\"noopener noreferrer\" target=\"_blank\">맞춤법검사</a></li>\r\n                <li><span id=\"byteCnt\">{byteCnt}</span>Byte / <span id=\"strCnt\">{strCnt}</span>자</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FuncContent;\r\n","import React from \"react\";\r\nimport { Container, Form, Row, Col, Button, Spinner } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FuncContent from \"../components/FuncContent\";\r\nimport axios from \"axios\";\r\nimport \"./Detail.css\";\r\n\r\nclass Detail extends React.Component {\r\n    state = {\r\n        isLoading : true,\r\n        intro: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {location} = this.props;\r\n        const {id} = this.props.match.params;\r\n\r\n        if(location.state === undefined) this.getIntro(id);\r\n        else this.setState({isLoading: false, intro:location.state});\r\n    }\r\n\r\n    getIntro = async (id) => {\r\n        const {data} = await axios.get(`/api/self-intro/${id}`);\r\n        this.setState({isLoading: false, intro:data});\r\n    }\r\n\r\n    goHome() {\r\n        window.location.href = \"/sic\";\r\n    }\r\n\r\n    render() {\r\n        const {isLoading, intro} = this.state;\r\n        return (\r\n            <Container>\r\n                {isLoading ? (\r\n                    <div className=\"loader\">\r\n                        <Spinner animation=\"border\" role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                        </Spinner>\r\n                    </div>\r\n                ) : (\r\n                    <Form>\r\n                        <Form.Group as={Col} controlId=\"title\">\r\n                            <Form.Label>Title</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter title\" value={intro.title} readOnly/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} md={{span: 4}} controlId=\"company\">\r\n                            <Form.Label>Company</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"Enter company\" value={intro.company} readOnly/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"content\">\r\n                            <Row>\r\n                                <Col><Form.Label>Content</Form.Label></Col>\r\n                                <Col>\r\n                                    <FuncContent str={intro.content}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Form.Control as=\"textarea\" rows=\"15\" placeholder=\"Enter content\" value={intro.content} readOnly/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Row id=\"formRow\">\r\n                            <Form.Group as={Col} md={{span:4, offset:4}} controlId=\"createdAt\">\r\n                                <Form.Label>CreatedAt</Form.Label>\r\n                                <Form.Control value={intro.createdAt} readOnly/>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} md={{span:4}} controlId=\"updatedAt\">\r\n                                <Form.Label>Last UpdatedAt</Form.Label>\r\n                                <Form.Control value={intro.updatedAt} readOnly/>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <Form.Group as={Col} id=\"btns\">\r\n                            <Button variant=\"secondary\" onClick={this.goHome.bind()}>\r\n                                나가기\r\n                            </Button>\r\n                            \r\n                            <Link to={{pathname:`/sic/update/${intro.id}`, state:intro}}>\r\n                                <Button variant=\"success\">\r\n                                    수정\r\n                                </Button>\r\n                            </Link>\r\n                        </Form.Group>\r\n                    </Form>\r\n                )}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from \"react\";\r\nimport \"./Navigation.css\"\r\nimport {Navbar, Nav, Form, Button, FormControl} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navigation() {\r\n    function search() {\r\n        const q = document.getElementById(\"q\").value;\r\n        window.location.href = `/sic/search?q=${q}`;\r\n    }\r\n\r\n    function enterKey() {\r\n        if(window.event.keyCode === 13) {\r\n            window.event.preventDefault();\r\n            document.getElementById(\"search\").click();\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"/\">자소서</Navbar.Brand>\r\n            <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"/\">Home</Nav.Link>\r\n                <Link to=\"/sic\" className=\"nav-link\">SIC</Link>\r\n                <Link to=\"/sic/write\" className=\"nav-link\">Write</Link>\r\n            </Nav>\r\n            <Form inline>\r\n                <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" id=\"q\" onKeyDown={enterKey}/>\r\n                <Button variant=\"outline-info\" id=\"search\" onClick={search}>Search</Button>\r\n            </Form>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport {Container, Form, Row, Col, Button} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport \"./Write.css\";\r\nimport FuncContent from \"../components/FuncContent\";\r\n\r\nfunction Write() {\r\n    function createData() {\r\n        const data = {\r\n            title : document.getElementById(\"title\").value,\r\n            company : document.getElementById(\"company\").value,\r\n            content : document.getElementById(\"content\").value\r\n        }\r\n\r\n        axios.post(\"/api/self-intro/\", data).then((result) => {\r\n            const {lastInsertId} = result.data;\r\n            window.location.href = `/sic/intro/${lastInsertId}`;\r\n        })\r\n    }\r\n\r\n    function goHome() {\r\n        window.location.href = \"/sic\";\r\n    }\r\n\r\n    function countTextarea() {\r\n        const str = document.getElementById(\"content\").value;\r\n        let len = 0;\r\n\r\n        for(let i=0; i<str.length; i++) {\r\n            if(escape(str.charAt(i)).length === 6) len++;\r\n            len++;\r\n        }\r\n\r\n        document.getElementById(\"byteCnt\").innerText = len;\r\n        document.getElementById(\"strCnt\").innerText = str.length;\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Form>\r\n                <Form.Group as={Col} controlId=\"title\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter title\" name=\"title\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} md={{span: 4}} controlId=\"company\">\r\n                    <Form.Label>Company</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter company\" name=\"company\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"content\">\r\n                    <Row>\r\n                        <Col><Form.Label>Content</Form.Label></Col>\r\n                        <Col>\r\n                            <FuncContent />\r\n                        </Col>\r\n                    </Row>\r\n                    <Form.Control as=\"textarea\" rows=\"15\" placeholder=\"Enter content\" name=\"content\" onKeyUp={countTextarea}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} id=\"btns\">\r\n                    <Button variant=\"danger\" onClick={goHome}>\r\n                        나가기\r\n                    </Button>\r\n                    \r\n                    <Button variant=\"primary\" onClick={createData}>\r\n                        등록\r\n                    </Button>\r\n                </Form.Group>\r\n            </Form>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Write;","import React from \"react\";\r\nimport {Container, Form, Row, Col, Button} from \"react-bootstrap\";\r\nimport FuncContent from \"../components/FuncContent\";\r\nimport axios from \"axios\";\r\n\r\nclass Update extends React.Component {\r\n    componentDidMount() {\r\n        const { location, match} = this.props;\r\n        const {id} = match.params;\r\n        if(location.state === undefined) window.location.href = `/sic/intro/${id}`\r\n    }\r\n\r\n    updateData(id) {\r\n        const data = {\r\n            title : document.getElementById(\"title\").value,\r\n            company : document.getElementById(\"company\").value,\r\n            content : document.getElementById(\"content\").value\r\n        }\r\n\r\n        axios.put(`/api/self-intro/${id}`, data).then(() => {\r\n            window.location.href = `/sic/intro/${id}`;\r\n        });\r\n    }\r\n\r\n    deleteData(id) {\r\n        axios.delete(`/api/self-intro/${id}`).then(() => {\r\n            window.location.href = \"/sic\";\r\n        });\r\n    }\r\n\r\n    cancelUpdate() {\r\n        window.history.back();\r\n    }\r\n\r\n    countTextarea() {\r\n        const str = document.getElementById(\"content\").value;\r\n        let len = 0;\r\n\r\n        for(let i=0; i<str.length; i++) {\r\n            if(escape(str.charAt(i)).length === 6) len++;\r\n            len++;\r\n        }\r\n\r\n        document.getElementById(\"byteCnt\").innerText = len;\r\n        document.getElementById(\"strCnt\").innerText = str.length;\r\n    }\r\n\r\n    render() {\r\n        const {location} = this.props;\r\n        const intro = location.state;\r\n        \r\n        if(intro) {\r\n            return (\r\n                <Container>\r\n                    <Form>\r\n                        <Form.Group as={Col} controlId=\"title\">\r\n                            <Form.Label>Title</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"title\" defaultValue={intro.title}/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} md={{span: 4}} controlId=\"company\">\r\n                            <Form.Label>Company</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"company\" defaultValue={intro.company}/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"content\">\r\n                            <Row>\r\n                                <Col><Form.Label>Content</Form.Label></Col>\r\n                                <Col>\r\n                                    <FuncContent str={intro.content}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Form.Control as=\"textarea\" rows=\"15\" name=\"content\" defaultValue={intro.content} onKeyUp={this.countTextarea.bind()}/>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} id=\"btns\">\r\n                            <Button variant=\"secondary\" onClick={this.cancelUpdate.bind()}>\r\n                                취소\r\n                            </Button>\r\n\r\n                            <Button variant=\"danger\" onClick={this.deleteData.bind(null, intro.id)}>\r\n                                삭제\r\n                            </Button>\r\n                            \r\n                            <Button variant=\"primary\" onClick={this.updateData.bind(null, intro.id)}>\r\n                                수정\r\n                            </Button>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Container>\r\n            );\r\n        }\r\n        else return null;\r\n    }\r\n}\r\n\r\nexport default Update;","import React from \"react\";\r\nimport Intro from \"../components/Intro\";\r\nimport {Container, Row, Col} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nclass Search extends React.Component {\r\n    state = {\r\n        isLoading: true,\r\n        intros: []\r\n    }\r\n\r\n    getIntros = async () => {\r\n        const {data} = await axios.get(\"/api/self-intro/\");\r\n        this.setState({intros: data, isLoading:false});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getIntros();\r\n    }\r\n\r\n    render() {\r\n        const {isLoading, intros} =this.state;\r\n        const uri = decodeURI(this.props.location.search);\r\n        const search = uri.split(\"=\")[1]\r\n\r\n        return (\r\n            <Container>\r\n                {isLoading ? (\r\n                    <Loader />\r\n                ) : (\r\n                    <Row xs={1} md={2} className=\"intros\">\r\n                        {intros.map((intro) => {\r\n                            try{\r\n                                if(intro.company.includes(search)) {\r\n                                    return (\r\n                                        <Col key={intro.id}>\r\n                                            <Intro\r\n                                                key = {intro.id}\r\n                                                id = {intro.id}\r\n                                                title = {intro.title}\r\n                                                company = {intro.company}\r\n                                                content = {intro.content}\r\n                                                createdAt = {intro.createdAt}\r\n                                                updatedAt = {intro.updatedAt}\r\n                                            />\r\n                                        </Col>\r\n                                    );\r\n                                }\r\n                                else return null;\r\n                            } catch(e) {\r\n                                return null;\r\n                            }\r\n                        })}\r\n                    </Row>\r\n                )}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\nimport Home from \"./routes/Home\";\r\nimport Detail from \"./routes/Detail\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport Write from \"./routes/Write\";\r\nimport Update from \"./routes/Update\";\r\nimport Search from \"./routes/Search\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Navigation/>\r\n      <Switch>\r\n        <Route path=\"/sic\" exact={true} component={Home} />\r\n        <Route path=\"/sic/write\" exact={true} component={Write} />\r\n        <Route path=\"/sic/intro/:id\" component={Detail} />\r\n        <Route path=\"/sic/update/:id\" component={Update} />\r\n        <Route path=\"/sic/search\" component={Search} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}